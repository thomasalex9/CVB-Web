@model CVB_Web.Models.consultant

<h2>Edit Consultant</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Consultant</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.consultant_nm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.consultant_nm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.consultant_nm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("title_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.title_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.consultant_initials, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.consultant_initials, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.consultant_initials, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.start_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.start_dt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.start_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end_dt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.end_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image_url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image_url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image_url, "", new { @class = "text-danger" })
                @{
                    // image_url's migrated from the original Access database were prefixed
                    // with a string like "TEA Photo#".

                    string imgUrl = Model.image_url;
                    if (imgUrl.IndexOf("#") > -1) { imgUrl = imgUrl.Split('#')[1]; }
                }
                <img src="@imgUrl" height="112" width="122">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_admin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_admin)
                    @Html.ValidationMessageFor(model => model.is_admin, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_manager)
                    @Html.ValidationMessageFor(model => model.is_manager, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.noteworthy_intro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea class="form-control" rows="3" name="noteworthy_intro">@Model.noteworthy_intro</textarea>
                @Html.ValidationMessageFor(model => model.noteworthy_intro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birth_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birth_dt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.birth_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vacation_available, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vacation_available, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.vacation_available, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
